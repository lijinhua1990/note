com组件和多接口

以前一直都认为一个dll(或者exe)就是一个com组件，dll里面不同的类就是不同的接口，CLSID就是用来标识一个dll或exe的。

其实这种看法是错误的！！！

组件不一定就是一个dll，一个dll中可以包含很多个组件，而且一般见到的dll里也不止包含一个组件，一个dll里的每个组件都有自己的CLSID和ProgID。对于ATL工程来说，一个ATL Object就是一个组件，很明显，我们可以在一个工程里加入很多个ATL Object。

对于ATL来说，一个组件对应着一个C++类，这在IDL中叫做coclass，一般情况下，一个coclas对应一个接口。实际上，一个coclass可以有很多个接口，这就是一个组件实现多个接口，并且这些接口共享一个组件中的函数。

比如：coclass A有一个接口IA，接口导出了一个函数Foo()，那么coclass A里有一个Foo()函数来实现IA接口中的Foo()函数。后来想要对组件A升级，加入一个导出函数Foo2()，但是又不想影响以前的用户，当然重做一个新组件是可以的，但是没有必要，并且有了重复代码。这时我们可以在组件A中新建一个接口IA2，IA2导出两个函数:Foo()和Foo2()，IA2仍然由coclass A来实现，也就是说现在coclass A里有了两个函数Foo()和Foo2()，接口IA和IA2共享coclass A里的Foo()函数。这样一来，以前的用户不用变化，因为接口IA没有改动，新的用户可以使用接口IA2，使用IA2也仍然可以完成IA的功能，因为时而也有Foo()函数。


